#ifndef _SCALERMANAGER_H_
#define _SCALERMANAGER_H_


#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "CAENVMElib.h"
#include <vector>
#include <memory>
#include <typeinfo>
#include <sys/time.h>

#include "TROOT.h"
#include <TApplication.h>
#include "TSystem.h"
#include "TTree.h"
#include "TNtuple.h"
#include "TFile.h"
#include "TRint.h"
#include "TApplication.h"

using namespace std;

class ScalerManager
{
 public:
	ScalerManager();
   	virtual ~ScalerManager();
   	int Init();

	void SetDiscAddress(string address);
	void SetCrateHandle(int handle){m_CrateHandle=handle;}
	void SetCycles(int cycles){m_cycles=cycles;};
	void SetRate(int rate){m_rate=rate;};
	void SetActive(int active);
	int  ReadMultipleCycles();
	void TransferToRoot();

 private:
	u_int32_t StringToHex(const string &str);
	int32_t get_time();
	int GetUnixTime();
	int m_CrateHandle;					//VME-Bus Object
	int m_cycles;						//Number of measurements Points
	int m_rate;							//Time between measurements
	vector<int> m_chanels;				//Store and show which channel. Length: 0-15
	u_int32_t chHex;					//Variable to write to the VME bus
	u_int32_t m_scalerAdr;				//Scaler hex adress
	int32_t  currenttime, previoustime; //For timing

};	

#endif
